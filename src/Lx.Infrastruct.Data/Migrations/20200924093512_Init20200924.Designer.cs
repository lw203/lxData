// <auto-generated />
using System;
using Lx.Infrastruct.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

namespace Lx.Infrastruct.Data.Migrations
{
    [DbContext(typeof(LxContext))]
    [Migration("20200924093512_Init20200924")]
    partial class Init20200924
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            modelBuilder.Entity("Lx.Domain.Models.DataManager.People", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<Guid?>("CheckId")
                        .HasColumnName("CHECKID");

                    b.Property<DateTime?>("CheckTime")
                        .HasColumnName("CHECKTIME")
                        .HasColumnType("varchar(100)");

                    b.Property<Guid?>("CreateId")
                        .HasColumnName("CREATEID");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("CREATETIME")
                        .HasColumnType("date");

                    b.Property<string>("Dynasty")
                        .HasColumnName("DYNASTY")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Explain")
                        .HasColumnName("EXPLAIN")
                        .HasColumnType("varchar(4000)")
                        .HasMaxLength(100);

                    b.Property<string>("LastUpdateTime")
                        .HasColumnName("LASTUPDATETIME")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PeopleName")
                        .IsRequired()
                        .HasColumnName("PEOPLENAME")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Sort")
                        .HasColumnName("SORT")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Status")
                        .HasColumnName("STATUS")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<Guid?>("UpdateId")
                        .HasColumnName("UPDATEID");

                    b.HasKey("Id");

                    b.HasIndex("CreateTime")
                        .HasName("IDX_PEOPLE_CREATETIME");

                    b.HasIndex("Dynasty")
                        .HasName("IDX_PEOPLE_DYNASTY");

                    b.HasIndex("PeopleName")
                        .HasName("IDX_PEOPLE_NAME");

                    b.ToTable("PEOPLE");
                });

            modelBuilder.Entity("Lx.Domain.Models.DataManager.PeopleDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<Guid?>("CheckId")
                        .HasColumnName("CHECKID");

                    b.Property<DateTime?>("CheckTime")
                        .HasColumnName("CHECKTIME")
                        .HasColumnType("date");

                    b.Property<string>("Content")
                        .HasColumnName("CONTENT")
                        .HasColumnType("varchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<Guid?>("CreateId")
                        .HasColumnName("CREATEID");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("CREATETIME")
                        .HasColumnType("date");

                    b.Property<string>("LastUpdateTime")
                        .HasColumnName("LASTUPDATETIME")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("PeopleId")
                        .HasColumnName("PEOPLEID");

                    b.Property<string>("SubTitle")
                        .HasColumnName("SUBTITLE")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Title")
                        .HasColumnName("TITLE")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200);

                    b.Property<Guid?>("UpdateId")
                        .HasColumnName("UPDATEID");

                    b.HasKey("Id")
                        .HasName("IDX_PEOPLE_DETAIL_ID");

                    b.HasIndex("CreateTime")
                        .HasName("IDX_PEOPLE_DETAIL_CREATETIME");

                    b.HasIndex("PeopleId")
                        .HasName("IDX_PEOPLE_DETAIL_PEOPLEID");

                    b.ToTable("PEOPLE_DETAIL");
                });

            modelBuilder.Entity("Lx.Domain.Models.DataManager.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<Guid?>("CreateId")
                        .HasColumnName("CREATEID");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("CREATETIME")
                        .HasColumnType("date");

                    b.Property<string>("LastUpdateTime")
                        .HasColumnName("LASTUPDATETIME")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("NAME")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<Guid?>("ParentId")
                        .HasColumnName("PARENTID");

                    b.Property<Guid?>("UpdateId")
                        .HasColumnName("UPDATEID");

                    b.HasKey("Id");

                    b.HasIndex("ParentId")
                        .HasName("IDX_PARENTID");

                    b.ToTable("TAG");
                });

            modelBuilder.Entity("Lx.Domain.Models.SystemManager.LoginRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<string>("Area")
                        .HasColumnName("AREA")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Brower")
                        .HasColumnName("BROWER")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200);

                    b.Property<Guid?>("CreateId");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("CREATETIME")
                        .HasColumnType("date");

                    b.Property<string>("Ip")
                        .HasColumnName("IP")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("LastUpdateTime")
                        .HasColumnName("LASTUPDATETIME")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Os")
                        .HasColumnName("OS")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200);

                    b.Property<Guid>("USERId")
                        .HasColumnName("USERID");

                    b.Property<Guid?>("UpdateId");

                    b.HasKey("Id")
                        .HasName("IDX_LOGIN_RECORD_ID");

                    b.HasIndex("CreateTime")
                        .HasName("IDX_LOGIN_RECORD_CREATETIME");

                    b.HasIndex("USERId")
                        .HasName("IDX_LOGIN_RECORD_USERID");

                    b.ToTable("LOGIN_RECORD");
                });

            modelBuilder.Entity("Lx.Domain.Models.SystemManager.UserAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<string>("Avatar")
                        .HasColumnName("AVATAR")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200);

                    b.Property<Guid?>("CreateId");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("CREATETIME")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasColumnName("EMAIL")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LastUpdateTime")
                        .HasColumnName("LASTUPDATETIME")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnName("NICKNAME")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PassWord")
                        .HasColumnName("PASSWORD")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Phone")
                        .HasColumnName("PHONE")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(32);

                    b.Property<Guid?>("UpdateId");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnName("USERNAME")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("CreateTime")
                        .HasName("IDX_USER_ACCOUNT_CTIME");

                    b.HasIndex("Phone")
                        .HasName("IDX_USER_ACCOUNT_PHONE");

                    b.HasIndex("UserName")
                        .HasName("IDX_USER_ACCOUNT_USERNAME");

                    b.ToTable("USER_ACCOUNT");
                });

            modelBuilder.Entity("Lx.Domain.Models.DataManager.PeopleDetail", b =>
                {
                    b.HasOne("Lx.Domain.Models.DataManager.People", "People")
                        .WithMany("PeopleDetails")
                        .HasForeignKey("PeopleId")
                        .HasConstraintName("FK_PEOPLEID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Lx.Domain.Models.DataManager.Tag", b =>
                {
                    b.HasOne("Lx.Domain.Models.DataManager.Tag", "ParentTag")
                        .WithMany("ChildTags")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_TAG_PARENTID");
                });

            modelBuilder.Entity("Lx.Domain.Models.SystemManager.LoginRecord", b =>
                {
                    b.HasOne("Lx.Domain.Models.SystemManager.UserAccount", "UserAccount")
                        .WithMany("LoginRecord")
                        .HasForeignKey("USERId")
                        .HasConstraintName("FK_USERID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
